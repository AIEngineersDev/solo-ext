(()=>{"use strict";const e=class{constructor(e){this.apiKey=e.apiKey,this.baseURL=e.baseURL,this.chat={completions:{create:this.createChatCompletion.bind(this)}}}async createChatCompletion(e){const t=await fetch(`${this.baseURL}/v1/chat/completions`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:JSON.stringify({model:e.model,messages:e.messages,max_tokens:e.max_tokens})});if(!t.ok){const e=await t.json().catch((()=>({error:{message:"API request failed"}})));throw new Error(e.error?.message||"API request failed")}return t.json()}},t="undefined"!=typeof browser?browser:chrome;function r(){if("undefined"!=typeof browser)try{return browser.runtime.getBrowserInfo?"firefox":"chrome"}catch{return"chrome"}return"chrome"}async function o(e){if("firefox"!==r())return chrome.sidePanel.open({tabId:e.id});try{await browser.sidebarAction.close(),await new Promise((e=>setTimeout(e,250))),await browser.sidebarAction.open()}catch(e){return console.error("Sidebar error:",e),browser.windows.create({url:"popup.html",type:"popup",width:400,height:600})}}chrome.runtime.onMessage.addListener(((r,o,s)=>{if("sendToAPI"===r.action)return async function(r){try{const o=await t.storage.sync.get(["apiUrl","apiToken","modelName","maxTokens"]);if(!o.apiUrl)throw new Error("API URL is not configured. Please open settings and configure the API URL.");if(!r.trim())throw new Error("Please enter some text to process.");const s=new e({apiKey:o.apiToken,baseURL:o.apiUrl}),a=await s.chat.completions.create({model:o.modelName||"meta-llama/Llama-2-7b-chat",messages:[{role:"user",content:r}],max_tokens:parseInt(o.maxTokens)||500});if(!a.choices?.[0]?.message)throw new Error("Invalid response from API. Please check your settings and try again.");return{success:!0,message:a.choices[0].message.content.trim()}}catch(e){return{success:!1,error:e.message}}}(r.content).then((e=>{s(e)})).catch((e=>{s({success:!1,error:e.message||"API request failed"})})),!0})),chrome.storage.onChanged.addListener(((e,t)=>{"sync"===t&&chrome.tabs.query({},(t=>{t.forEach((t=>{try{chrome.tabs.sendMessage(t.id,{action:"settingsUpdated",changes:e})}catch(e){console.debug("Could not send to tab:",t.id)}}))}))})),t.action.onClicked.addListener((async e=>{if(!e.url.startsWith("chrome://")&&!e.url.startsWith("about:"))try{await o(e)}catch(e){console.error("Failed to open panel:",e),t.windows.create({url:"popup.html",type:"popup",width:400,height:600})}})),"firefox"===r()?browser.browserAction.onClicked.addListener((async()=>{try{const e=await browser.windows.getCurrent();await browser.sidebarAction.close(),await new Promise((e=>setTimeout(e,250))),await browser.sidebarAction.open({windowId:e.id})}catch(e){console.error("Failed to toggle sidebar:",e),browser.windows.create({url:"popup.html",type:"popup",width:400,height:600})}})):chrome.action.onClicked.addListener((async e=>{e.url.startsWith("chrome://")||e.url.startsWith("about:")||await o(e)})),"firefox"===r()&&browser.runtime.onInstalled.addListener((()=>{browser.sidebarAction.open()}))})();